// -*- C++ -*-

/*
   Copyright 2007 Deutsches Forschungszentrum fuer Kuenstliche Intelligenz 
   or its licensors, as applicable.
   
   You may not use this file except under the terms of the accompanying license.
   
   Licensed under the Apache License, Version 2.0 (the "License"); you
   may not use this file except in compliance with the License. You may
   obtain a copy of the License at http:  www.apache.org/licenses/LICENSE-2.0
   
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
   
   Project: 
   File: 
   Purpose: 
   Responsible: tmb
   Reviewer: 
   Primary Repository: 
   Web Sites: www.iupr.org, www.dfki.de
*/

$#include "colib.h"
$#include "imglib.h"
$#include "tesseract.h"

$ using namespace colib;
$ using namespace imglib;
$ using namespace ocropus;

module tesseract {

void tesseract_init_with_language @ init (const char *language);
char *tesseract_block @ recognize_block (bytearray &image);
char *tesseract_rectangle @ recognize_rectangle(bytearray &image,int x0,int y0,int x1,int y1);
/*
eventually, just make them aliases
char *tesseract_block @ pass1_block (bytearray &image);
char *tesseract_rectangle @ pass1_rectangle(bytearray &image,int x0,int y0,int x1,int y1);
*/
void tesseract_end @ finish ();

}

IRecognizeLine *make_TesseractRecognizeLine();

////////////////////////////////////////////////////////////////////////////

/// A RecognizedPage is a transport object responsible for keeping the OCR results.
/// Also, it might communicate some options to the OCR to select which data needs
/// to be in the OCR output.
class RecognizedPage {
    int width();
    int height();
    void setWidth(int width);
    void setHeight(int height);
    const char *description();
    void setDescription(const char *s);
    const char *timeReport();
    void setTimeReport(const char *s);
    void setLinesCount(int n);
    int linesCount();
    void setText(nustring &s, int index);
    void text(nustring &s, int index);
    void setCosts(floatarray &c, int index);
    void costs(floatarray &c, int index);
    rectangle bbox(int index);
    void setBbox(rectangle bbox, int index);
};

void tesseract_recognize_blockwise(RecognizedPage &result,
                                   bytearray &gray,
                                   intarray &pageseg);

